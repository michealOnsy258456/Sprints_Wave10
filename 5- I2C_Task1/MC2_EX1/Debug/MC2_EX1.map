Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./MCAL/I2C/i2c.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./MCAL/I2C/i2c.o
LOAD ./MCAL/GLOBAL_INTERRUPT/globalInterrupt.o
LOAD ./MCAL/DIO/DIO.o
LOAD ./APP/APP.o
LOAD ./main.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xe74
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000070        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000078        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000078                __vector_1
                0x00000078                __vector_12
                0x00000078                __bad_interrupt
                0x00000078                __vector_6
                0x00000078                __vector_3
                0x00000078                __vector_11
                0x00000078                __vector_13
                0x00000078                __vector_17
                0x00000078                __vector_7
                0x00000078                __vector_5
                0x00000078                __vector_4
                0x00000078                __vector_9
                0x00000078                __vector_2
                0x00000078                __vector_15
                0x00000078                __vector_8
                0x00000078                __vector_14
                0x00000078                __vector_10
                0x00000078                __vector_16
                0x00000078                __vector_18
                0x00000078                __vector_20
 .text          0x0000007c        0x0 ./MCAL/I2C/i2c.o
 .text          0x0000007c        0x0 ./MCAL/GLOBAL_INTERRUPT/globalInterrupt.o
 .text          0x0000007c        0x0 ./MCAL/DIO/DIO.o
 .text          0x0000007c        0x0 ./APP/APP.o
 .text          0x0000007c        0x0 ./main.o
 .text          0x0000007c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x0000007c        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000007c                . = ALIGN (0x2)
 *(.text.*)
 .text.TWI_SetSlaveAddress
                0x0000007c       0x16 ./MCAL/I2C/i2c.o
                0x0000007c                TWI_SetSlaveAddress
 .text.TWI_Init
                0x00000092       0x44 ./MCAL/I2C/i2c.o
                0x00000092                TWI_Init
 .text.TWI_SendStartCondition
                0x000000d6       0x26 ./MCAL/I2C/i2c.o
                0x000000d6                TWI_SendStartCondition
 .text.TWI_SendStopCondition
                0x000000fc       0x16 ./MCAL/I2C/i2c.o
                0x000000fc                TWI_SendStopCondition
 .text.TWI_SendSLAWrite
                0x00000112       0x30 ./MCAL/I2C/i2c.o
                0x00000112                TWI_SendSLAWrite
 .text.TWI_SendSLARead
                0x00000142       0x38 ./MCAL/I2C/i2c.o
                0x00000142                TWI_SendSLARead
 .text.TWI_SendData
                0x0000017a       0x2e ./MCAL/I2C/i2c.o
                0x0000017a                TWI_SendData
 .text.TWI_getStatus
                0x000001a8       0x1e ./MCAL/I2C/i2c.o
                0x000001a8                TWI_getStatus
 .text.TWI_SendChar
                0x000001c6       0x62 ./MCAL/I2C/i2c.o
                0x000001c6                TWI_SendChar
 .text.TWI_RecDataAck
                0x00000228       0x3c ./MCAL/I2C/i2c.o
                0x00000228                TWI_RecDataAck
 .text.TWI_readWithNACK
                0x00000264       0x26 ./MCAL/I2C/i2c.o
                0x00000264                TWI_readWithNACK
 .text.TWI_RecChar
                0x0000028a       0x34 ./MCAL/I2C/i2c.o
                0x0000028a                TWI_RecChar
 .text.TWI_EnableInterrupt
                0x000002be       0x1c ./MCAL/I2C/i2c.o
                0x000002be                TWI_EnableInterrupt
 .text.TWI_DisableInterrupt
                0x000002da       0x1c ./MCAL/I2C/i2c.o
                0x000002da                TWI_DisableInterrupt
 .text.TWI_SlaOperDetermination
                0x000002f6       0x26 ./MCAL/I2C/i2c.o
                0x000002f6                TWI_SlaOperDetermination
 .text.TWI_SetCallback
                0x0000031c       0x24 ./MCAL/I2C/i2c.o
                0x0000031c                TWI_SetCallback
 .text.__vector_19
                0x00000340       0x5a ./MCAL/I2C/i2c.o
                0x00000340                __vector_19
 .text.GI_EnableGI
                0x0000039a       0x1c ./MCAL/GLOBAL_INTERRUPT/globalInterrupt.o
                0x0000039a                GI_EnableGI
 .text.GI_DisableGI
                0x000003b6       0x1c ./MCAL/GLOBAL_INTERRUPT/globalInterrupt.o
                0x000003b6                GI_DisableGI
 .text.DIO_setPortDirection
                0x000003d2       0x90 ./MCAL/DIO/DIO.o
                0x000003d2                DIO_setPortDirection
 .text.DIO_setPinDirection
                0x00000462      0x224 ./MCAL/DIO/DIO.o
                0x00000462                DIO_setPinDirection
 .text.DIO_writePortValue
                0x00000686       0x90 ./MCAL/DIO/DIO.o
                0x00000686                DIO_writePortValue
 .text.DIO_writePinValue
                0x00000716      0x224 ./MCAL/DIO/DIO.o
                0x00000716                DIO_writePinValue
 .text.DIO_readPort
                0x0000093a       0xb2 ./MCAL/DIO/DIO.o
                0x0000093a                DIO_readPort
 .text.DIO_readPin
                0x000009ec      0x134 ./MCAL/DIO/DIO.o
                0x000009ec                DIO_readPin
 .text.DIO_TogglePin
                0x00000b20      0x116 ./MCAL/DIO/DIO.o
                0x00000b20                DIO_TogglePin
 .text.DIO_SetPullupRes
                0x00000c36      0x1ce ./MCAL/DIO/DIO.o
                0x00000c36                DIO_SetPullupRes
 .text.App_Init
                0x00000e04       0x2a ./APP/APP.o
                0x00000e04                App_Init
 .text.App_Update
                0x00000e2e        0xe ./APP/APP.o
                0x00000e2e                App_Update
 .text.TWI_ISR  0x00000e3c       0x22 ./APP/APP.o
                0x00000e3c                TWI_ISR
 .text.main     0x00000e5e       0x12 ./main.o
                0x00000e5e                main
 .text.libgcc   0x00000e70        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000e70        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000e70                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000e70        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000e70                exit
                0x00000e70                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000e70        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000e74                _etext = .

.data           0x00800060        0x0 load address 0x00000e74
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./MCAL/I2C/i2c.o
 .data          0x00800060        0x0 ./MCAL/GLOBAL_INTERRUPT/globalInterrupt.o
 .data          0x00800060        0x0 ./MCAL/DIO/DIO.o
 .data          0x00800060        0x0 ./APP/APP.o
 .data          0x00800060        0x0 ./main.o
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x3
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./MCAL/I2C/i2c.o
 .bss           0x00800060        0x0 ./MCAL/GLOBAL_INTERRUPT/globalInterrupt.o
 .bss           0x00800060        0x0 ./MCAL/DIO/DIO.o
 .bss           0x00800060        0x0 ./APP/APP.o
 .bss           0x00800060        0x0 ./main.o
 .bss           0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.G_TWI_CALLBACK
                0x00800060        0x2 ./MCAL/I2C/i2c.o
                0x00800060                G_TWI_CALLBACK
 .bss.data      0x00800062        0x1 ./APP/APP.o
                0x00800062                data
 *(COMMON)
                0x00800063                PROVIDE (__bss_end, .)
                0x00000e74                __data_load_start = LOADADDR (.data)
                0x00000e74                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800063        0x0
                0x00800063                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800063                PROVIDE (__noinit_end, .)
                0x00800063                _end = .
                0x00800063                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x174c
 *(.stab)
 .stab          0x00000000      0x864 ./MCAL/I2C/i2c.o
 .stab          0x00000864      0x1ec ./MCAL/GLOBAL_INTERRUPT/globalInterrupt.o
                                0x390 (size before relaxing)
 .stab          0x00000a50      0x948 ./MCAL/DIO/DIO.o
                                0xb4c (size before relaxing)
 .stab          0x00001398      0x240 ./APP/APP.o
                                0x444 (size before relaxing)
 .stab          0x000015d8      0x174 ./main.o
                                0x3a8 (size before relaxing)

.stabstr        0x00000000      0xdf3
 *(.stabstr)
 .stabstr       0x00000000      0xdf3 ./MCAL/I2C/i2c.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(MC2_EX1.elf elf32-avr)
LOAD linker stubs
